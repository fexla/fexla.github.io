<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://fexla.github.io/</id><title>FEXLA</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2024-02-26T19:42:35+08:00</updated> <author> <name>fexla</name> <uri>https://fexla.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://fexla.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://fexla.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2024 fexla </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>记录一个写毕设的时候遇到的问题[2024-02-26]</title><link href="https://fexla.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E5%86%99%E6%AF%95%E8%AE%BE%E7%9A%84%E6%97%B6%E5%80%99%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98-2024-02-26/" rel="alternate" type="text/html" title="记录一个写毕设的时候遇到的问题[2024-02-26]" /><published>2024-02-26T00:00:00+08:00</published> <updated>2024-02-26T00:00:00+08:00</updated> <id>https://fexla.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E5%86%99%E6%AF%95%E8%AE%BE%E7%9A%84%E6%97%B6%E5%80%99%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98-2024-02-26/</id> <content src="https://fexla.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E5%86%99%E6%AF%95%E8%AE%BE%E7%9A%84%E6%97%B6%E5%80%99%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98-2024-02-26/" /> <author> <name>fexla</name> </author> <category term="编程" /> <category term="C++" /> <summary> 今天在做毕设的时候，遇到了一个奇怪的运行时错误。 问题经过简化，可以用以下几行代码在我的环境里触发问题。 #include &amp;lt;typeindex&amp;gt; #include"iostream" #include "unordered_map" int main() { std::unordered_map&amp;lt;std::type_index, int&amp;gt; m; std::type_index key = typeid(int); std::cout &amp;lt;&amp;lt; key.name() &amp;lt;&amp;lt; std::endl; return 0; } 在几次尝试后发现，使用Clion+CMake，在使用msvc Debug模式的情况下，能编译通过但是会出现运行时错误。（mingw64的Debug和Re... </summary> </entry> <entry><title>《C++程序设计语言》笔记 第3章 C++概览：抽象机制</title><link href="https://fexla.github.io/posts/C++%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80-%E7%AC%94%E8%AE%B0-%E7%AC%AC3%E7%AB%A0-C++%E6%A6%82%E8%A7%88-%E6%8A%BD%E8%B1%A1%E6%9C%BA%E5%88%B6/" rel="alternate" type="text/html" title="《C++程序设计语言》笔记 第3章 C++概览：抽象机制" /><published>2023-04-09T00:00:00+08:00</published> <updated>2023-04-09T19:31:18+08:00</updated> <id>https://fexla.github.io/posts/C++%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80-%E7%AC%94%E8%AE%B0-%E7%AC%AC3%E7%AB%A0-C++%E6%A6%82%E8%A7%88-%E6%8A%BD%E8%B1%A1%E6%9C%BA%E5%88%B6/</id> <content src="https://fexla.github.io/posts/C++%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80-%E7%AC%94%E8%AE%B0-%E7%AC%AC3%E7%AB%A0-C++%E6%A6%82%E8%A7%88-%E6%8A%BD%E8%B1%A1%E6%9C%BA%E5%88%B6/" /> <author> <name>fexla</name> </author> <category term="编程" /> <category term="C++" /> <summary> 本笔记纯为个人使用而记录，只包含本人欠了解的知识点 3.2 类 P51 C++最核心的语言特性就是类。类是一种用户自定义的数据类型，用于在程序代码中表示某种概念。无论何时，只要我们想为程序设计一个有用的概念、想法或实体，都应该设法把它表示为程序中的的一个类，这样我们的想法就能表达成代码，而不是仅存在于我们的头脑中、设计文档里或者注释里。 三种重要的类： 具体类 抽象类 类层次中的类 很多有用的的类都可以归为这三个类别，其他类也可以看成是这些类别的简单变形或组合。 3.2.1 具体类型 3.2.1.2 容器 P54 在某些情况下你不能使用回收功能，而且有的时候处于逻辑或性能的考虑你宁愿使用更精确地资源释放控制（见13.6.4节）。因此，我们迫切需要一种机制以确保构造函数分配的内存一定会被销毁，这种机制就叫做析构函数（destructor）。 ... </summary> </entry> <entry><title>算法日寄[2022-08-06]</title><link href="https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-06/" rel="alternate" type="text/html" title="算法日寄[2022-08-06]" /><published>2022-08-06T00:00:00+08:00</published> <updated>2022-08-06T00:00:00+08:00</updated> <id>https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-06/</id> <content src="https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-06/" /> <author> <name>fexla</name> </author> <category term="编程" /> <category term="算法日记" /> <summary> 牛客网训练赛第六次 我做了AJM Codeforces Round #812 (Div. 2) D是我第一次遇见交互题，其实应该做出来的，没做出来有点可惜。 </summary> </entry> <entry><title>算法日寄[2022-08-04]</title><link href="https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-04/" rel="alternate" type="text/html" title="算法日寄[2022-08-04]" /><published>2022-08-04T00:00:00+08:00</published> <updated>2022-08-11T02:55:08+08:00</updated> <id>https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-04/</id> <content src="https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-04/" /> <author> <name>fexla</name> </author> <category term="编程" /> <category term="算法日记" /> <summary> 区间权值 问题可以转化为将所有连续子序列的和分别乘以$w_i$然后求和，其中i表示子序列的长度。用$b_{i,j}$表示从j开始的一个长度为i的连续子序列的和，用$s_i$表示原数组的前缀和。所求的值可以表示为： \[\sum_{i=1}^n{\sum_{j=1}^{n-i+1}{b_{i,j}w_i}}\] $\sum_{j=1}^{n-i+1}{b_{i,j}}$表示长度为i的所有子序列之和，用$c_i$表示。 观察发现： \[\begin{aligned} c_1&amp;amp;=\sum_{j=1}^{n}{b_{1,j}}=s_i\\ c_i&amp;amp;=\sum_{j=1}^{n-i+1}{b_{i,j}}\\ &amp;amp;=(\sum_{j=1}^{n-i+2}{b_{i-1,j}})+(\sum_{j=i}^{n-i+1}a_j)\\ &amp;amp;=c_{i-1}+s_... </summary> </entry> <entry><title>算法日寄[2022-08-02]</title><link href="https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-02/" rel="alternate" type="text/html" title="算法日寄[2022-08-02]" /><published>2022-08-02T00:00:00+08:00</published> <updated>2022-08-02T00:00:00+08:00</updated> <id>https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-02/</id> <content src="https://fexla.github.io/posts/%E7%AE%97%E6%B3%95%E6%97%A5%E5%AF%84-2022-08-02/" /> <author> <name>fexla</name> </author> <category term="编程" /> <category term="算法日记" /> <summary> 复习最长递增子序列，最长公共子序列。 通知小弟 题意是在有向图有n个点，其中m个点是源点的相邻点。问源点最少连接多少个相邻点可以使得源点和所有点相连。 先dfs遍历一遍看相邻点全连接的情况下是否能连接到所有的点。如果不行，问题结束；如果可以，问题转化为源点最少连接多少个相邻点可以使得源点和所有相邻点相连。 在m个点中跑dfs和并查集，首先每个邻接点初始化并查集，如果一个邻接点遍历到并查集的另一个根节点，将他的父节点设为自己。最后统计一下根节点的数量，完成。 两次dfs可以合并成一次完成。 复习强连通分量Tarjan。 复习线段树、ST表。 </summary> </entry> </feed>
